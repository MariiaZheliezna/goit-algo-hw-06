import networkx as nx
import matplotlib.pyplot as plt


# Граф деяких автошляхів Европи
G = nx.Graph()
G.add_nodes_from(['Київ', 'Варшава', 'Прага', 'Братислава', 'Відень', 
                  'Будапешт', 'Рим', 'Париж', 'Берлін', 'Лондон', 'Мадрид'])
G.add_edges_from([('Київ', 'Будапешт'), ('Київ', 'Братислава'), ('Київ', 'Прага'),
                  ('Київ', 'Варшава'), ('Прага', 'Відень'), ('Прага', 'Варшава'),
                  ('Прага', 'Рим'), ('Прага', 'Берлін'), ('Прага', 'Париж'),
                  ('Відень', 'Братислава'), ('Відень', 'Будапешт'), ('Відень', 'Рим'),
                  ('Будапешт', 'Братислава'), ('Будапешт', 'Рим'), ('Рим', 'Париж'),
                  ('Рим', 'Мадрид'), ('Варшава', 'Берлін'), ('Берлін', 'Париж'),
                  ('Берлін', 'Лондон'), ('Лондон', 'Париж'), ('Лондон', 'Мадрид'),
                  ('Мадрид', 'Париж')
                    ])
G['Київ']['Будапешт']['weight'] = 1117
G['Київ']['Братислава']['weight'] = 1330
G['Київ']['Прага']['weight'] = 1409
G['Київ']['Варшава']['weight'] = 794
G['Прага']['Відень']['weight'] = 340
G['Прага']['Варшава']['weight'] = 640
G['Прага']['Рим']['weight'] = 1300
G['Прага']['Берлін']['weight'] = 351
G['Прага']['Париж']['weight'] = 1031
G['Відень']['Братислава']['weight'] = 78
G['Відень']['Будапешт']['weight'] = 244
G['Відень']['Рим']['weight'] = 1134
G['Будапешт']['Братислава']['weight'] = 200
G['Будапешт']['Рим']['weight'] = 1215
G['Рим']['Париж']['weight'] = 1422
G['Рим']['Мадрид']['weight'] = 1957
G['Варшава']['Берлін']['weight'] = 574
G['Берлін']['Париж']['weight'] = 1057
G['Берлін']['Лондон']['weight'] = 1101
G['Лондон']['Париж']['weight'] = 461
G['Лондон']['Мадрид']['weight'] = 1721
G['Мадрид']['Париж']['weight'] = 1275

print(f'Кількість верщин графу: {G.number_of_nodes()}, кількість ребер: {G.number_of_edges()}')
print(f'Ступінь центральності (Degree Centrality): {nx.degree_centrality(G)}')
print(f'Близькість вузла (Closeness Centrality): {nx.closeness_centrality(G)}')
print(f'Посередництво вузла (Betweenness Centrality): {nx.betweenness_centrality(G)}')

plt.figure(figsize=(12,6))
labels = nx.get_edge_attributes(G, 'weight')
pos = nx.circular_layout(G)
nx.draw(G, pos, with_labels=True, font_size=11, node_size=2000, node_color='lightblue')
nx.draw_networkx_edge_labels(G, pos, edge_labels=labels)
plt.show()